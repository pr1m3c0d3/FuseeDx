<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Fusee.SceneManagement.SceneManagement</name>
    </assembly>
    <members>
        <member name="T:Fusee.SceneManagement.Properties.Resources">
            <summary>
              Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
            </summary>
        </member>
        <member name="P:Fusee.SceneManagement.Properties.Resources.ResourceManager">
            <summary>
              Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
            </summary>
        </member>
        <member name="P:Fusee.SceneManagement.Properties.Resources.Culture">
            <summary>
              Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
              Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
            </summary>
        </member>
        <member name="T:Fusee.SceneManagement.SpotLight">
            <summary>
            This class is derived from Light and set's a Spotlight in the scene.
            </summary>
        </member>
        <member name="T:Fusee.SceneManagement.Light">
            <summary>
            Light is the base class for all lightsources in the scene.
            All lights are derived from this class and this class is derived from Component.
            </summary>
        </member>
        <member name="T:Fusee.SceneManagement.Component">
            <summary>
            Base class from which all Components are derived.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.Component.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.Component"/> class. Whitout setting a SceneEntity.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.Component.#ctor(Fusee.SceneManagement.SceneEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.Component"/> class with a SceneEntity. 
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.Component.Accept(Fusee.SceneManagement.SceneVisitor)">
            <summary>
            Passes the Component to the SceneVisitor which decides what to do with that Component.
            </summary>
            <param name="sv">The sv.</param>
        </member>
        <member name="P:Fusee.SceneManagement.Component.SceneEntity">
            <summary>
            Gets or sets the scene entity of this Component.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.Light.#ctor">
            <summary>
            Creates a light object.
            </summary>
        </member>
        <member name="T:Fusee.SceneManagement.Light.LightType">
            <summary>
            Enums for lighttypes at the moment there are 3
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.Light.LightType.Directional">
            <summary>
            Directional = 0
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.Light.LightType.Point">
            <summary>
            Point = 1
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.Light.LightType.Spot">
            <summary>
            The spot = 2
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.SpotLight.#ctor(Fusee.Math.float3,Fusee.Math.float3,Fusee.Math.float4,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.SpotLight"/> class. Position, direction, color and the channel are needed.
            </summary>
            <param name="position">The position of the spotlight.</param>
            <param name="direction">The direction of the spotlight.</param>
            <param name="color">The color of the spotlight(Red, Green, Blue, Alpha).</param>
            <param name="channel">The memory space of the light(0 - 7).</param>
        </member>
        <member name="M:Fusee.SceneManagement.SpotLight.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.SpotLight"/> class. Only the channel is needed.
            </summary>
            <param name="channel">The memory space of the light(0 - 7).</param>
        </member>
        <member name="M:Fusee.SceneManagement.SpotLight.TraverseForRendering(Fusee.SceneManagement.SceneVisitorRendering)">
            <summary>
            TraverseForRendering add's Spotlight to the lightqueue.
            </summary>
        </member>
        <member name="T:Fusee.SceneManagement.ActionCode">
            <summary>
            ActionCode class grants access to an SceneEntities Components.
            Supported: DeltaTime, Input recognition
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.ActionCode.Init(Fusee.SceneManagement.SceneEntity)">
            <summary>
            Init is called upon creation of an ActionCode Object and utilizes the access to a SceneEntitie's transform and renderer objects.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.ActionCode.TraverseForRendering(Fusee.SceneManagement.SceneVisitorRendering)">
            <summary>
            Traverse is giving the Update routine access to the DeltaTime and the Input class and afterwards executes the Update routine.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.ActionCode.Start">
            <summary>
            Start is called only once. At the time of the call other objects inside the scene are already initialized.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.ActionCode.Update">
            <summary>
            Update is called every frame. Please avoid placing heavy calculations inside this Function.
            </summary>
        </member>
        <member name="T:Fusee.SceneManagement.RenderMatrix">
            <summary>
            Creates a float4x4 matrix that will be passed to the RenderContext.
            </summary>
        </member>
        <member name="T:Fusee.SceneManagement.RenderJob">
            <summary>
            Provides the virtual SubmitWork method.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.RenderJob.SubmitWork(Fusee.Engine.RenderContext)">
            <summary>
            The SubmitWork method will be overwritten by a visited Component that "want's" to be rendered.
            Therefore a RenderContext is needed.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.RenderMatrix.#ctor(Fusee.Math.float4x4)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.RenderMatrix"/> class. Needs to be provided with a matrix that needs to be rendered.
            </summary>
            <param name="matrix">The matrix that need's to be rendered e.g. the matrix of a object in scene.</param>
        </member>
        <member name="M:Fusee.SceneManagement.RenderMatrix.SubmitWork(Fusee.Engine.RenderContext)">
            <summary>
            Overwrites the SubmitWork method of RenderJob class. Set's the Model matrix into RendeContext. 
            </summary>
        </member>
        <member name="T:Fusee.SceneManagement.SceneVisitorSearch">
            <summary>
            Derivate of SceneVisitor, used to search for SceneEntities or Components in the scene.
            </summary>
        </member>
        <member name="T:Fusee.SceneManagement.SceneVisitor">
            <summary>
            The SceneVisitor is the base class for Scene traversing functions
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitor.Visit(Fusee.SceneManagement.SceneEntity)">
            <summary>
            Visits the specified cEntity to collect data if required by the current Visitor derivate.
            </summary>
            <param name="cEntity">The cEntity.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitor.Visit(Fusee.SceneManagement.ActionCode)">
            <summary>
            Visits the specified action code to collect data if required by the current Visitor derivate.
            </summary>
            <param name="actionCode">The action code.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitor.Visit(Fusee.SceneManagement.DirectionalLight)">
            <summary>
            Visits the specified directional light to collect data if required by the current Visitor derivate.
            </summary>
            <param name="directionalLight">The directional light.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitor.Visit(Fusee.SceneManagement.PointLight)">
            <summary>
            Visits the specified point light to collect data if required by the current Visitor derivate.
            </summary>
            <param name="pointLight">The point light.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitor.Visit(Fusee.SceneManagement.Renderer)">
            <summary>
            Visits the specified renderer to collect data if required by the current Visitor derivate.
            </summary>
            <param name="renderer">The renderer.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitor.Visit(Fusee.SceneManagement.SpotLight)">
            <summary>
            Visits the specified spot light to collect data if required by the current Visitor derivate.
            </summary>
            <param name="spotLight">The spot light.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitor.Visit(Fusee.SceneManagement.Transformation)">
            <summary>
            Visits the specified transformation to collect data if required by the current Visitor derivate.
            </summary>
            <param name="transformation">The transformation.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitor.Visit(Fusee.SceneManagement.Camera)">
            <summary>
            Visits the specified camera to collect data if required by the current Visitor derivate.
            </summary>
            <param name="camera">The camera.</param>
        </member>
        <member name="F:Fusee.SceneManagement.SceneVisitorSearch._name">
            <summary>
            The _name that will be searched for.
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.SceneVisitorSearch._searchresult">
            <summary>
            The _searchresult: If a result is found returns this as reference, else null
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitorSearch.Visit(Fusee.SceneManagement.SceneEntity)">
            <summary>
            Visits the specified scene entity to check its name and set _searchresult as reference if the name matches.
            </summary>
            <param name="sceneEntity">The scene entity.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitorSearch.FindSceneEntity(System.Collections.Generic.List{Fusee.SceneManagement.SceneEntity},System.String)">
            <summary>
            Finds a scene entity by name.
            </summary>
            <param name="sceneEntities">The list of scene entities from SceneManager that will be visited.</param>
            <param name="name">The searched name of a SceneEntity.</param>
            <returns></returns>
        </member>
        <member name="T:Fusee.SceneManagement.RenderPointLight">
            <summary>
            RenderPointLight is derived from Renderjob and is responible for passing the PointLight towards the RenderContext.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.RenderPointLight.#ctor(Fusee.Math.float3,Fusee.Math.float4,Fusee.SceneManagement.Light.LightType,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.RenderPointLight"/> class. Position, color, type and channel are needed.
            </summary>
            <param name="position">The position of the light.</param>
            <param name="color">The color of the light (Red, Green, Blue, Alpha).</param>
            <param name="type">The light type.</param>
            <param name="channel">The memory space of the light(0 - 7).</param>
        </member>
        <member name="M:Fusee.SceneManagement.RenderPointLight.SubmitWork(Fusee.Engine.RenderContext)">
            <summary>
             Passes pointlight's parameters to RenderContext. 
            </summary>
        </member>
        <member name="T:Fusee.SceneManagement.RenderDirectionalLight">
            <summary>
            RednerDirectionalLight is derived from Renderjob and is responible for passing the DirectionalLight towards the RenderContext.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.RenderDirectionalLight.#ctor(Fusee.Math.float3,Fusee.Math.float4,Fusee.SceneManagement.Light.LightType,System.Int32)">
            <summary>
            Creates a RenderDirectionalLight needed parameters:( float3, float4, Light.Lighttype, int).
            </summary>
            <param name="direction">Direction of the light.</param>
            <param name="color">Color of the light "Red Green Blue Alpha"</param>
            <param name="type">The light type.</param>
            <param name="channel">The memory space of the light(0 - 7).</param>
        </member>
        <member name="M:Fusee.SceneManagement.RenderDirectionalLight.SubmitWork(Fusee.Engine.RenderContext)">
            <summary>
             Passes directionallight's parameters to RenderContext.
            </summary>
        </member>
        <member name="T:Fusee.SceneManagement.Transformation">
            <summary>
            Transformation is derived from Component and stores all positions, angles and movement of all SceneEntitys. 
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.Transformation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.Transformation"/> class. No SceneEntity will be set.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.Transformation.#ctor(Fusee.SceneManagement.SceneEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.Transformation"/> class. Sets a SceneEntity for Transform.
            </summary>
            <param name="entity">The SceneEntity that will be set to in Transform.</param>
        </member>
        <member name="P:Fusee.SceneManagement.Transformation.Matrix">
            <summary>
            Gets or sets the float4x4 transformMatrix.
            </summary>
        </member>
        <member name="P:Fusee.SceneManagement.Transformation.LocalPosition">
            <summary>
            Gets or sets the float3 LocalPosition.
            </summary>
        </member>
        <member name="P:Fusee.SceneManagement.Transformation.LocalScale">
            <summary>
            Gets or sets the float3 LocalScale.
            </summary>
        </member>
        <member name="P:Fusee.SceneManagement.Transformation.LocalQuaternion">
            <summary>
            Gets or sets the Quaternion LocalQuaternion.
            </summary>
        </member>
        <member name="P:Fusee.SceneManagement.Transformation.LocalEulerAngles">
            <summary>
            Gets or sets the float3 LocalEulerAngles.
            </summary>
        </member>
        <member name="T:Fusee.SceneManagement.SceneEntity">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.SceneEntity.name">
            <summary>
            The name of the SceneEntity.
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.SceneEntity.tag">
            <summary>
            The tag of the SceneEntity.
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.SceneEntity.transform">
            <summary>
            The transform Component of the SceneEntity.
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.SceneEntity.renderer">
            <summary>
            The renderer Component of the SceneEntity.
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.SceneEntity._parent">
            <summary>
            The _parent SceneEntity of the current SceneEntity.
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.SceneEntity._childSceneEntities">
            <summary>
            The _child scene entities of the current SceneEntity.
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.SceneEntity._childComponents">
            <summary>
            The components of the current SceneEntity. 
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.SceneEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.SceneEntity"/> class.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.SceneEntity.#ctor(Fusee.SceneManagement.SceneEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.SceneEntity"/> class.
            </summary>
            <param name="parent">The parent SceneEntity.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneEntity.TraverseForRendering(Fusee.SceneManagement.SceneVisitorRendering)">
            <summary>
            Traverses through the current SceneEntities components and through its children and their components.
            </summary>
            <param name="sceneVisitorRendering">The scene visitor rendering.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneEntity.Accept(Fusee.SceneManagement.SceneVisitor)">
            <summary>
            Accepts the specified SceneVisitor.
            </summary>
            <param name="sv">The sv.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneEntity.AddComponent(Fusee.SceneManagement.Component)">
            <summary>
            Adds a component to the SceneEntity.
            </summary>
            <param name="component">The component.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneEntity.AddChild(Fusee.SceneManagement.SceneEntity)">
            <summary>
            Adds a child SceneEntity to the current SceneEntity.
            </summary>
            <param name="child">The child.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneEntity.GetChildren">
            <summary>
            Gets the child SceneEntities of the current SceneEntity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fusee.SceneManagement.SceneEntity.GetComponent``1">
            <summary>
            Gets the specified component from the SceneEntity.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Fusee.SceneManagement.SceneEntity.GetComponents``1">
            <summary>
            Gets all specified components of the current SceneEntity.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Fusee.SceneManagement.SceneEntity.FindSceneEntity(System.String)">
            <summary>
            Finds a SceneEntity in the scene.
            </summary>
            <param name="sceneEntityName">Name of the scene entity.</param>
            <returns></returns>
        </member>
        <member name="M:Fusee.SceneManagement.SceneEntity.DestroySceneEntity(Fusee.SceneManagement.SceneEntity)">
            <summary>
            Removes the scene entity and all of its children from the scene.
            </summary>
            <param name="objectToBeDestroyed">The object to be destroyed.</param>
        </member>
        <member name="P:Fusee.SceneManagement.SceneEntity.parent">
            <summary>
            Gets or sets the parent SceneEntity.
            </summary>
            <value>
            The parent.
            </value>
        </member>
        <member name="T:Fusee.SceneManagement.Renderer">
            <summary>
            Renderer is derived from Component. Creates a usable ingame object.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.Renderer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.Renderer"/> class. Creates usable ingame object from an obj.model file, and a new material.
            </summary>
        </member>
        <member name="T:Fusee.SceneManagement.DirectionalLight">
            <summary>
            This class is derived from Light and set's a Directionallight in the scene.
            A direction, a color and the position of the lightsource is needed.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.DirectionalLight.#ctor(Fusee.Math.float3,Fusee.Math.float4,Fusee.Math.float3,System.Int32)">
            <summary>
            Creates a directional light in the scene. Direction, color, position, and channel is needed.
            It is possible to set up to 8 lights in the scene.
            </summary>
            <param name="direction">Direction of the light.</param>
            <param name="color">The color of the light.</param>
            <param name="position">The position in the scene.</param>
            <param name="channel">The memory space of the light.(0 - 7)</param>
        </member>
        <member name="M:Fusee.SceneManagement.DirectionalLight.#ctor(System.Int32)">
            <summary>
            Creates a directional light in the scene. Direction, color and position will get standart values.
            Channel is needed. It is possible to set up to 8 lights in the scene.
            </summary>
            <param name="channel">The memory space of the light(0 - 7).</param>
        </member>
        <member name="M:Fusee.SceneManagement.DirectionalLight.TraverseForRendering(Fusee.SceneManagement.SceneVisitorRendering)">
            <summary>
            TraverseForRendering add's Directionallight to the lightqueue.
            </summary>
        </member>
        <member name="T:Fusee.SceneManagement.RenderCamera">
            <summary>
            RenderCamera is derived from Renderjob and is responible for passing the Camera towards the RenderContext.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.RenderCamera.#ctor(Fusee.Math.float4x4)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.RenderCamera"/> class. Needs the ViewMatrix of a Camera.
            </summary>
            <param name="matrix">The matrix that will be the new ViewMatrix.</param>
        </member>
        <member name="M:Fusee.SceneManagement.RenderCamera.SubmitWork(Fusee.Engine.RenderContext)">
            <summary>
            Sets the ViewMatrix in the RenderContext.
            </summary>
            <param name="renderContext">The RenderContext that handles the rendering.</param>
        </member>
        <member name="T:Fusee.SceneManagement.Camera">
            <summary>
            This class is derived from Component and set's a Camera in the scene.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.Camera.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.Camera"/> class. The ViewMatrix will be set to float4x4 identity matrix.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.Camera.#ctor(Fusee.SceneManagement.Transformation)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.Camera"/> class. The ViewMatrix will be set to a provided float 4x4 matrix.
            </summary>
            <param name="cameratransformation">The matrix that will become the Viewmatrix.</param>
        </member>
        <member name="M:Fusee.SceneManagement.Camera.SubmitWork">
            <summary>
            TraverseForRendering add's Camera to the lightqueue.
            </summary>
            <returns>A RenderingCamera Object that passes the Camera to the renderContext.</returns>
        </member>
        <member name="P:Fusee.SceneManagement.Camera.ViewMatrix">
            <summary>
            Allows to set and get the Viewmatrix of the Camera.
            </summary>
        </member>
        <member name="T:Fusee.SceneManagement.RenderRenderer">
            <summary>
            Creates a Renderer Component that will be passed to the RenderContext.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.RenderRenderer.#ctor(Fusee.SceneManagement.Renderer)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.RenderRenderer"/> class. Needs to be provided with a Renderer Component.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.RenderRenderer.SubmitWork(Fusee.Engine.RenderContext)">
            <summary>
            Overwrites the SubmitWork method of RenderJob class. Render Component will get shaders and materials and passed to the RenderContextImplementation.
            </summary>
        </member>
        <member name="T:Fusee.SceneManagement.PointLight">
            <summary>
            This class is derived from Light and set's a Pointlight in the scene.
            A color and the position of the lightsource are needed.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.PointLight.#ctor(Fusee.Math.float3,Fusee.Math.float4,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.PointLight"/> class. Position, color and channel are needet.
            </summary>
            <param name="position">The position of the pointlight.</param>
            <param name="color">The color of the pointlight.</param>
            <param name="channel">The memory space of the light(0 - 7).</param>
        </member>
        <member name="M:Fusee.SceneManagement.PointLight.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.PointLight"/> class. Only the channel is needed. Other params
            will be set to default value. 
            </summary>
            <param name="channel">The memory space of the light(0 - 7).</param>
        </member>
        <member name="M:Fusee.SceneManagement.PointLight.TraverseForRendering(Fusee.SceneManagement.SceneVisitorRendering)">
            <summary>
            TraverseForRendering add's Pointlight to the lightqueue.
            </summary>
        </member>
        <member name="T:Fusee.SceneManagement.RenderSpotLight">
            <summary>
            RenderSpotLight is derived from Renderjob and is responible for passing the SpotLight towards the RenderContext.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.RenderSpotLight.#ctor(Fusee.Math.float3,Fusee.Math.float3,Fusee.Math.float4,Fusee.SceneManagement.Light.LightType,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.RenderSpotLight"/> class. Position, direction, color, type and channel.
            </summary>
            <param name="position">The position of the light.</param>
            <param name="direction">The direction of the light.</param>
            <param name="color">The lightcolor.</param>
            <param name="type">The type.</param>
            <param name="channel">The memory space of the light(0 - 7).</param>
        </member>
        <member name="M:Fusee.SceneManagement.RenderSpotLight.SubmitWork(Fusee.Engine.RenderContext)">
            <summary>
            Passes spotlight's parameters to RenderContext.
            </summary>
        </member>
        <member name="T:Fusee.SceneManagement.SceneVisitorRendering">
            <summary>
            A derivate of SceneVisitor, used to Visit Renderer, Transformation and Mesh components and submit to renderqueue.
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.SceneVisitorRendering._hasTransform">
            <summary>
            The _has transform
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.SceneVisitorRendering._hasRenderer">
            <summary>
            The _has renderer
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.SceneVisitorRendering._hasMesh">
            <summary>
            The _has mesh
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.SceneVisitorRendering._queue">
            <summary>
            The _queue
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.SceneVisitorRendering._mtxModelViewStack">
            <summary>
            The _MTX model view stack
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.SceneVisitorRendering._meshStack">
            <summary>
            The _mesh stack
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.SceneVisitorRendering._RendererStack">
            <summary>
            The _ renderer stack
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.SceneVisitorRendering._deltaTime">
            <summary>
            The _delta time
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.SceneVisitorRendering._input">
            <summary>
            The _input
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitorRendering.SetDeltaTime(System.Double)">
            <summary>
            Sets the delta time.
            </summary>
            <param name="delta">The delta.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitorRendering.GetDeltaTime(System.Double@)">
            <summary>
            Gets the delta time.
            </summary>
            <param name="deltaTime">The delta time.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitorRendering.#ctor(Fusee.SceneManagement.SceneManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.SceneVisitorRendering"/> class.
            </summary>
            <param name="queue">The SceneManager reference.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitorRendering.StoreMesh(Fusee.Engine.Mesh)">
            <summary>
            Stores the mesh in internal stack.
            </summary>
            <param name="mesh">The mesh.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitorRendering.StoreRenderer(Fusee.SceneManagement.Renderer)">
            <summary>
            Stores the renderer in internal stack.
            </summary>
            <param name="Renderer">The renderer.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitorRendering.AddTransform(Fusee.Math.float4x4)">
            <summary>
            Adds the transform to the internal stack.
            </summary>
            <param name="mtx">The MTX.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitorRendering.HasRenderingTriple">
            <summary>
            Determines whether [has rendering triple].
            </summary>
            <returns>
              <c>true</c> if [has rendering triple]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitorRendering.Push">
            <summary>
            Pushes this instance.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitorRendering.Pop">
            <summary>
            Pops this instance.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitorRendering.AddLightDirectional(Fusee.Math.float3,Fusee.Math.float4,Fusee.SceneManagement.Light.LightType,System.Int32)">
            <summary>
            Adds the directional lightto the rendering queue.
            </summary>
            <param name="direction">The direction.</param>
            <param name="color">The color.</param>
            <param name="type">The type.</param>
            <param name="channel">The channel.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitorRendering.AddLightPoint(Fusee.Math.float3,Fusee.Math.float4,Fusee.SceneManagement.Light.LightType,System.Int32)">
            <summary>
            Adds the point light to the rendering queue.
            </summary>
            <param name="position">The position.</param>
            <param name="color">The color.</param>
            <param name="type">The type.</param>
            <param name="channel">The channel.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitorRendering.AddLightSpot(Fusee.Math.float3,Fusee.Math.float3,Fusee.Math.float4,Fusee.SceneManagement.Light.LightType,System.Int32)">
            <summary>
            Adds the spot light to the rendering queue.
            </summary>
            <param name="position">The position.</param>
            <param name="direction">The direction.</param>
            <param name="color">The color.</param>
            <param name="type">The type.</param>
            <param name="channel">The channel.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitorRendering.AddRenderJob(Fusee.Math.float4x4,Fusee.Engine.Mesh,Fusee.SceneManagement.Renderer)">
            <summary>
            Adds the render job that consists of Matrix, Renderer and Mesh to the rendering queue.
            </summary>
            <param name="matrix">The matrix.</param>
            <param name="mesh">The mesh.</param>
            <param name="renderer">The renderer.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitorRendering.Visit(Fusee.SceneManagement.SceneEntity)">
            <summary>
            Visits the specified cEntity to collect data if required by the current Visitor derivate.
            </summary>
            <param name="cEntity">The cEntity.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitorRendering.Visit(Fusee.SceneManagement.ActionCode)">
            <summary>
            Visits the specified action code to collect data if required by the current Visitor derivate.
            </summary>
            <param name="actionCode">The action code.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitorRendering.Visit(Fusee.SceneManagement.Renderer)">
            <summary>
            Visits the specified renderer to collect data if required by the current Visitor derivate.
            </summary>
            <param name="renderer">The renderer.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitorRendering.Visit(Fusee.SceneManagement.Transformation)">
            <summary>
            Visits the specified transform.
            </summary>
            <param name="transform">The transform.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitorRendering.Visit(Fusee.SceneManagement.DirectionalLight)">
            <summary>
            Visits the specified directional light to collect data if required by the current Visitor derivate.
            </summary>
            <param name="directionalLight">The directional light.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitorRendering.Visit(Fusee.SceneManagement.PointLight)">
            <summary>
            Visits the specified point light to collect data if required by the current Visitor derivate.
            </summary>
            <param name="pointLight">The point light.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitorRendering.Visit(Fusee.SceneManagement.SpotLight)">
            <summary>
            Visits the specified spot light to collect data if required by the current Visitor derivate.
            </summary>
            <param name="spotLight">The spot light.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitorRendering.Visit(Fusee.SceneManagement.Camera)">
            <summary>
            Visits the specified camera to collect data if required by the current Visitor derivate.
            </summary>
            <param name="camera">The camera.</param>
        </member>
        <member name="P:Fusee.SceneManagement.SceneVisitorRendering.Input">
            <summary>
            Gets or sets the input.
            </summary>
            <value>
            The input.
            </value>
        </member>
        <member name="T:Fusee.SceneManagement.RenderMesh">
            <summary>
            Creates a mesh that will be passed to the RenderContext.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.RenderMesh.#ctor(Fusee.Engine.Mesh)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.RenderMesh"/> class. Needs to be provided with a mesh that needs to be rendered.
            </summary>
            <param name="mesh">The mesh that need's to be rendered e.g. the mesh of a ingame object.</param>
        </member>
        <member name="M:Fusee.SceneManagement.RenderMesh.SubmitWork(Fusee.Engine.RenderContext)">
            <summary>
            Overwrites the SubmitWork method of RenderJob class. The mesh will be provided with everything it need's and passed to 
            RenderContextImplementation. 
            </summary>
            <param name="renderContext"></param>
        </member>
        <member name="T:Fusee.SceneManagement.SceneManager">
            <summary>
            The SceneManager class handles the rendering of the scene
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.SceneManager._manager">
            <summary>
            The _manager Singleton
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.SceneManager._renderContext">
            <summary>
            The _render context
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.SceneManager.RenderJobs">
            <summary>
            The render jobs
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.SceneManager.SceneMembers">
            <summary>
            The scene members
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.SceneManager._sceneVisitorRendering">
            <summary>
            The _scene visitor rendering
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.SceneManager.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Fusee.SceneManagement.SceneManager"/> class from being created.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.SceneManager.AddSceneEntity(Fusee.SceneManagement.SceneEntity)">
            <summary>
            Adds the scene entity to the scene.
            </summary>
            <param name="sceneEntity">The scene entity.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneManager.AddCamera(Fusee.SceneManagement.RenderCamera)">
            <summary>
            Adds the camera to the rendering queue [0].
            </summary>
            <param name="cameramatrix">The cameramatrix.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneManager.Traverse(Fusee.Engine.RenderCanvas)">
            <summary>
            Traverses the scene's entities with their corresponding components.
            </summary>
            <param name="renderCanvas">The render canvas.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneManager.AddRenderJob(Fusee.SceneManagement.RenderJob)">
            <summary>
            Adds a render job to the render queue[2].
            </summary>
            <param name="job">The job.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneManager.AddLightJob(Fusee.SceneManagement.RenderJob)">
            <summary>
            Adds a light job to the light queue [1].
            </summary>
            <param name="job">The job.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneManager.FindSceneEntity(System.String)">
            <summary>
            Finds the scene entity inside the current scene.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="P:Fusee.SceneManagement.SceneManager.Manager">
            <summary>
            Gets the Singleton SceneManager instance.
            </summary>
            <value>
            The manager instance.
            </value>
        </member>
        <member name="P:Fusee.SceneManagement.SceneManager.RC">
            <summary>
            Gets or sets(only once) a RenderContext instance.
            </summary>
            <value>
            The RenderContext.
            </value>
        </member>
    </members>
</doc>
